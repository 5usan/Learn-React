{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Working with forms and user inputs\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInputs from \"../hooks/use-inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const firstNameValidity = enteredFirstName => {\n    const firstNameValidation = enteredFirstName.trim() !== \"\";\n    return firstNameValidation;\n  };\n\n  const lastNameValidity = enteredLastName => {\n    const lastNameValidation = enteredLastName.trim() !== \"\";\n    return lastNameValidation;\n  };\n\n  const emailValidity = enteredemail => {\n    const emailValidation = enteredemail.includes('@');\n    return emailValidation;\n  };\n\n  const {\n    enteredValue: enteredFirstName,\n    valueIsValid: firstNameIsValid,\n    ValueIsNotValid: firstNameIsNotValid,\n    ValueChangeHandler: firstNameChangeHandler,\n    reset: firstNameReset\n  } = useInputs(firstNameValidity);\n  const {\n    enteredValue: enteredLastName,\n    valueIsValid: lastNameIsValid,\n    ValueIsNotValid: lastNameIsNotValid,\n    ValueChangeHandler: lastNameChangeHandler,\n    reset: lastNameReset\n  } = useInputs(lastNameValidity);\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: emailIsValid,\n    ValueIsNotValid: emailIsNotValid,\n    ValueChangeHandler: emailChangeHandler,\n    reset: emailReset\n  } = useInputs(emailValidity);\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    firstNameReset();\n    lastNameReset();\n  };\n\n  const firstNameInputClass = firstNameIsNotValid ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClass = lastNameIsNotValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          value: enteredFirstName,\n          onBlur: firstNameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), firstNameIsNotValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Enter First Name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), lastNameIsNotValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Enter Last Name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"JyjNZkZsC8JxZvad1hhg0xJXnNM=\", false, function () {\n  return [useInputs, useInputs, useInputs];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/React/Working with forms and user inputs/src/components/BasicForm.js"],"names":["useInputs","BasicForm","props","firstNameValidity","enteredFirstName","firstNameValidation","trim","lastNameValidity","enteredLastName","lastNameValidation","emailValidity","enteredemail","emailValidation","includes","enteredValue","valueIsValid","firstNameIsValid","ValueIsNotValid","firstNameIsNotValid","ValueChangeHandler","firstNameChangeHandler","reset","firstNameReset","lastNameIsValid","lastNameIsNotValid","lastNameChangeHandler","lastNameReset","enteredEmail","emailIsValid","emailIsNotValid","emailChangeHandler","emailReset","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameInputClass","lastNameInputClass"],"mappings":"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","sourcesContent":["import useInputs from \"../hooks/use-inputs\";\n\nconst BasicForm = (props) => {\n  const firstNameValidity = (enteredFirstName) => {\n    const firstNameValidation = enteredFirstName.trim() !== \"\";\n    return firstNameValidation;\n  };\n\n  const lastNameValidity = (enteredLastName) => {\n    const lastNameValidation = enteredLastName.trim() !== \"\";\n    return lastNameValidation;\n  };\n\n  const emailValidity = (enteredemail) => {\n    const emailValidation = enteredemail.includes('@');\n    return emailValidation;\n  };\n\n  const {\n    enteredValue: enteredFirstName,\n    valueIsValid: firstNameIsValid,\n    ValueIsNotValid: firstNameIsNotValid,\n    ValueChangeHandler: firstNameChangeHandler,\n    reset: firstNameReset,\n  } = useInputs(firstNameValidity);\n\n  const {\n    enteredValue: enteredLastName,\n    valueIsValid: lastNameIsValid,\n    ValueIsNotValid: lastNameIsNotValid,\n    ValueChangeHandler: lastNameChangeHandler,\n    reset: lastNameReset,\n  } = useInputs(lastNameValidity);\n\n  const {\n    enteredValue: enteredEmail,\n    valueIsValid: emailIsValid,\n    ValueIsNotValid: emailIsNotValid,\n    ValueChangeHandler: emailChangeHandler,\n    reset: emailReset,\n  } = useInputs(emailValidity);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    firstNameReset();\n    lastNameReset();\n  };\n\n  const firstNameInputClass = firstNameIsNotValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClass = lastNameIsNotValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            value={enteredFirstName}\n            onBlur={firstNameChangeHandler}\n          />\n          {firstNameIsNotValid && (\n            <p className=\"error-text\">Enter First Name.</p>\n          )}\n        </div>\n        <div className={lastNameInputClass}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredLastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameChangeHandler}\n          />\n          {lastNameIsNotValid && <p className=\"error-text\">Enter Last Name.</p>}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}