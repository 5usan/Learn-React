{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Working with forms and user inputs\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInputs from \"../hooks/use-inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  // const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  // const [firstNameIsTouched, setFirstNameIsTouched] = useState(false);\n  // const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  // const firstNameIsNotValid = !firstNameIsValid && firstNameIsTouched;\n  // const firstNameChangeHandler = (event) => {\n  //   setEnteredFirstName(event.target.value);\n  //   setFirstNameIsTouched(true);\n  // };\n  const firstNameValidity = enteredFirstName => {\n    const firstNameValidation = enteredFirstName.trim() !== '';\n    return firstNameValidation;\n  };\n\n  const {\n    enteredValue: enteredFirstName,\n    ValueIsTouched: firstNameIsTouched,\n    valueIsValid: firstNameIsValid,\n    ValueIsNotValid: firstNameIsNotValid,\n    ValueChangeHandler: firstNameChangeHandler\n  } = useInputs(firstNameValidity);\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    setFirstNameIsTouched(false);\n    setEnteredFirstName(\"\");\n  };\n\n  const firstNameInputClass = firstNameIsNotValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          value: enteredFirstName,\n          onBlur: firstNameChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), firstNameIsNotValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Enter First Name.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"HOWzqH9Y/rlxUBYV0m08zvtggNo=\", false, function () {\n  return [useInputs];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["D:/React/Working with forms and user inputs/src/components/BasicForm.js"],"names":["useState","useInputs","BasicForm","props","firstNameValidity","enteredFirstName","firstNameValidation","trim","enteredValue","ValueIsTouched","firstNameIsTouched","valueIsValid","firstNameIsValid","ValueIsNotValid","firstNameIsNotValid","ValueChangeHandler","firstNameChangeHandler","formIsValid","formSubmissionHandler","event","preventDefault","console","log","setFirstNameIsTouched","setEnteredFirstName","firstNameInputClass"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA,QAAMC,iBAAiB,GAAIC,gBAAD,IAAsB;AAC9C,UAAMC,mBAAmB,GAAGD,gBAAgB,CAACE,IAAjB,OAA4B,EAAxD;AACA,WAAOD,mBAAP;AACD,GAHD;;AAIA,QAAM;AACJE,IAAAA,YAAY,EAAEH,gBADV;AAEJI,IAAAA,cAAc,EAAEC,kBAFZ;AAGJC,IAAAA,YAAY,EAAEC,gBAHV;AAIJC,IAAAA,eAAe,EAAEC,mBAJb;AAKJC,IAAAA,kBAAkB,EAAEC;AALhB,MAMFf,SAAS,CAACG,iBAAD,CANb;AAQA,MAAIa,WAAW,GAAG,KAAlB;;AAEA,MAAIL,gBAAJ,EAAsB;AACpBK,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACR,gBAAL,EAAuB;AACrB;AACD;;AAEDS,IAAAA,OAAO,CAACC,GAAR,CAAYjB,gBAAZ;AACAkB,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAC,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD,GAVD;;AAYA,QAAMC,mBAAmB,GAAGX,mBAAmB,GAC3C,sBAD2C,GAE3C,cAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEI,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEO,mBAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,QAAQ,EAAET,sBAHZ;AAIE,UAAA,KAAK,EAAEX,gBAJT;AAKE,UAAA,MAAM,EAAEW;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF,EASGF,mBAAmB,iBAClB;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAwBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAQ,QAAA,QAAQ,EAAE,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA1ED;;GAAMf,S;UAqBAD,S;;;KArBAC,S;AA4EN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\nimport useInputs from \"../hooks/use-inputs\";\n\nconst BasicForm = (props) => {\n  // const [enteredFirstName, setEnteredFirstName] = useState(\"\");\n  // const [firstNameIsTouched, setFirstNameIsTouched] = useState(false);\n\n  // const firstNameIsValid = enteredFirstName.trim() !== \"\";\n  // const firstNameIsNotValid = !firstNameIsValid && firstNameIsTouched;\n\n  // const firstNameChangeHandler = (event) => {\n  //   setEnteredFirstName(event.target.value);\n  //   setFirstNameIsTouched(true);\n  // };\n  const firstNameValidity = (enteredFirstName) => {\n    const firstNameValidation = enteredFirstName.trim() !== '';\n    return firstNameValidation;\n  };\n  const {\n    enteredValue: enteredFirstName,\n    ValueIsTouched: firstNameIsTouched,\n    valueIsValid: firstNameIsValid,\n    ValueIsNotValid: firstNameIsNotValid,\n    ValueChangeHandler: firstNameChangeHandler\n  } = useInputs(firstNameValidity);\n\n  let formIsValid = false;\n\n  if (firstNameIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (!firstNameIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    setFirstNameIsTouched(false);\n    setEnteredFirstName(\"\");\n  };\n\n  const firstNameInputClass = firstNameIsNotValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            value={enteredFirstName}\n            onBlur={firstNameChangeHandler}\n          />\n          {firstNameIsNotValid && (\n            <p className=\"error-text\">Enter First Name.</p>\n          )}\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" />\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" />\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}