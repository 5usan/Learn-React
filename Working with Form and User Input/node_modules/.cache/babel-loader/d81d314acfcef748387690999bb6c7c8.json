{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Working with forms and user inputs\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const validateNameFn = enteredName => {\n    const validateName = enteredName.trim() !== \"\";\n    return validateName;\n  };\n\n  const validateEmailFn = enteredEmail => {\n    const validateEmail = enteredEmail.include(\"@\");\n    return validateEmail;\n  };\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    reset: resetNameInput\n  } = useInput(validateNameFn);\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: EmailChangeHandler,\n    reset: resetEmailInput\n  } = useInput(validateEmailFn);\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !ent) {\n      return;\n    }\n\n    console.log(enteredName);\n    resetNameInput();\n  };\n\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter your name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: nameChangeHandler,\n        onBlur: nameChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must include @.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"vFBgit2/MVV2beeDJIrl8xV9bKc=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["D:/React/Working with forms and user inputs/src/components/SimpleInput.js"],"names":["useInput","SimpleInput","props","validateNameFn","enteredName","validateName","trim","validateEmailFn","enteredEmail","validateEmail","include","value","hasError","nameInputHasError","isValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","reset","resetNameInput","emailInputHasError","enteredEmailIsValid","EmailChangeHandler","resetEmailInput","formIsValid","formSubmissionHandler","event","preventDefault","ent","console","log","nameInputClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\n  const validateNameFn = (enteredName) => {\n    const validateName=  enteredName.trim() !== \"\";\n    return validateName;\n  };\n\n  const validateEmailFn = (enteredEmail) => {\n    const validateEmail=  enteredEmail.include(\"@\");\n    return validateEmail;\n  };\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    reset: resetNameInput\n  } = useInput(validateNameFn);\n\n   const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: EmailChangeHandler,\n    reset: resetEmailInput\n  } = useInput(validateEmailFn);\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n     \n    if (!enteredNameIsValid || !ent) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    resetNameInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Please enter your name.</p>\n        )}\n      </div>\n\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your E-mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={nameChangeHandler}\n          onBlur={nameChangeHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Email must include @.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}