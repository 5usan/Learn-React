{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initailInput = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: true\n    };\n  }\n\n  if (action.type === \"RESET\") {\n    return initailInput;\n  }\n\n  return initailInput;\n};\n\nconst useInputs = validityFn => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initailInput);\n  const valueIsValid = validityFn(inputState.value);\n  const ValueIsNotValid = !valueIsValid && inputState.isTouched;\n\n  const ValueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n\n  return {\n    enteredValue: inputState.value,\n    ValueIsTouched: inputState.isTouched,\n    valueIsValid,\n    ValueIsNotValid,\n    ValueChangeHandler,\n    reset\n  };\n};\n\n_s(useInputs, \"DVboJ3oIlydpoZ0bIWGv9Jb150I=\");\n\nexport default useInputs;","map":{"version":3,"sources":["D:/React/Working with forms and user inputs/src/hooks/use-inputs.js"],"names":["useReducer","initailInput","value","isTouched","inputStateReducer","state","action","type","useInputs","validityFn","inputState","dispatch","valueIsValid","ValueIsNotValid","ValueChangeHandler","event","target","reset","enteredValue","ValueIsTouched"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO;AACLL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KADT;AAELC,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAON,YAAP;AACD;;AACD,SAAOA,YAAP;AACD,CAXD;;AAaA,MAAMO,SAAS,GAAIC,UAAD,IAAgB;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACI,iBAAD,EAAoBH,YAApB,CAAzC;AAEA,QAAMW,YAAY,GAAGH,UAAU,CAACC,UAAU,CAACR,KAAZ,CAA/B;AACA,QAAMW,eAAe,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAApD;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,OADC;AAEPL,MAAAA,KAAK,EAAEa,KAAK,CAACC,MAAN,CAAad;AAFb,KAAD,CAAR;AAID,GALD;;AAOA,QAAMe,KAAK,GAAG,MAAM;AAClBN,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,SAAO;AACLW,IAAAA,YAAY,EAAER,UAAU,CAACR,KADpB;AAELiB,IAAAA,cAAc,EAAET,UAAU,CAACP,SAFtB;AAGLS,IAAAA,YAHK;AAILC,IAAAA,eAJK;AAKLC,IAAAA,kBALK;AAMLG,IAAAA;AANK,GAAP;AAQD,CA3BD;;GAAMT,S;;AA6BN,eAAeA,SAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initailInput = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return {\r\n      value: action.value,\r\n      isTouched: true,\r\n    };\r\n  }\r\n  if (action.type === \"RESET\") {\r\n    return initailInput;\r\n  }\r\n  return initailInput;\r\n};\r\n\r\nconst useInputs = (validityFn) => {\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initailInput);\r\n\r\n  const valueIsValid = validityFn(inputState.value);\r\n  const ValueIsNotValid = !valueIsValid && inputState.isTouched;\r\n\r\n  const ValueChangeHandler = (event) => {\r\n    dispatch({\r\n      type: \"INPUT\",\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({\r\n      type: \"RESET\",\r\n    });\r\n  };\r\n\r\n  return {\r\n    enteredValue: inputState.value,\r\n    ValueIsTouched: inputState.isTouched,\r\n    valueIsValid,\r\n    ValueIsNotValid,\r\n    ValueChangeHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInputs;\r\n"]},"metadata":{},"sourceType":"module"}