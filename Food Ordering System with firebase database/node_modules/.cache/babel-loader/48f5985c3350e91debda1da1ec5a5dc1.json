{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food Ordering System with backend connection (firebase)\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  meals: [],\n  isLoading: true,\n  httpError: null\n};\n\nconst stateReducer = (state, action) => {\n  if (action.type === \"MEALS-LOADED\") {\n    console.log(\"Loaded State\");\n    return {\n      meals: action.value,\n      isLoading: false,\n      httpError: null\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    console.log(\"ERROR State\");\n    console.log(action.value);\n    return {\n      meals: null,\n      isLoading: false,\n      httpError: action.value\n    };\n  }\n\n  return initialState;\n};\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(stateReducer, initialState);\n  useEffect(() => {\n    fetchMeals();\n  }, []);\n\n  if (state.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (state.httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: state.httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = state.meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React/Food Ordering System with backend connection (firebase)/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useReducer","Card","classes","MealItem","initialState","meals","isLoading","httpError","stateReducer","state","action","type","console","log","value","AvailableMeals","dispatch","fetchMeals","MealsLoading","MealsError","mealsList","map","meal","id","name","description","price"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAO;AACLR,MAAAA,KAAK,EAAEK,MAAM,CAACI,KADT;AAELR,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAAP;AAKD;;AAED,MAAIG,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,KAAnB;AACA,WAAO;AACLT,MAAAA,KAAK,EAAE,IADF;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,SAAS,EAAEG,MAAM,CAACI;AAHb,KAAP;AAKD;;AACD,SAAOV,YAAP;AACD,CApBD;;AAsBA,MAAMW,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBhB,UAAU,CAACQ,YAAD,EAAeJ,YAAf,CAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AAEdkB,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIR,KAAK,CAACH,SAAV,EAAqB;AACnB,wBACE;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACgB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIT,KAAK,CAACF,SAAV,EAAqB;AACnB,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACiB,UAA5B;AAAA,6BACE;AAAA,kBAAIV,KAAK,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMa,SAAS,GAAGX,KAAK,CAACJ,KAAN,CAAYgB,GAAZ,CAAiBC,IAAD,iBAChC,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,IAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJpB;AAKE,IAAA,KAAK,EAAEH,IAAI,CAACI;AALd,KACOJ,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACG,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKe;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCD;;GAAML,c;;KAAAA,c;AA2CN,eAAeA,cAAf","sourcesContent":["import { useEffect, useReducer } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst initialState = {\r\n  meals: [],\r\n  isLoading: true,\r\n  httpError: null,\r\n};\r\nconst stateReducer = (state, action) => {\r\n  if (action.type === \"MEALS-LOADED\") {\r\n    console.log(\"Loaded State\");\r\n    return {\r\n      meals: action.value,\r\n      isLoading: false,\r\n      httpError: null,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ERROR\") {\r\n    console.log(\"ERROR State\");\r\n    console.log(action.value);\r\n    return {\r\n      meals: null,\r\n      isLoading: false,\r\n      httpError: action.value,\r\n    };\r\n  }\r\n  return initialState;\r\n};\r\n\r\nconst AvailableMeals = () => {\r\n  const [state, dispatch] = useReducer(stateReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    \r\n    fetchMeals();\r\n  }, []);\r\n\r\n  if (state.isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (state.httpError) {\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{state.httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = state.meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}