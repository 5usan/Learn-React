{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food Ordering System with backend connection (firebase)\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const [isCheckout, setIsCheckout] = useState(false);\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartOneItemAddHandler = item => {\n    cartCtx.addOneItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const CheckoutCancelHandler = () => {\n    setIsCheckout(false);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(CartItem, {\n        name: item.name,\n        amount: item.amount,\n        price: item.price,\n        onRemove: cartItemRemoveHandler.bind(null, item.id),\n        onAdd: cartOneItemAddHandler.bind(null, item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isCheckout ? /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: CheckoutCancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this) : {\n      modalActions\n    }]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"PaE/a8ZO3F+TT5XQFy/4A9pbopA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/React/Food Ordering System with backend connection (firebase)/src/components/Cart/Cart.js"],"names":["React","useContext","useState","Modal","classes","CartContext","CartItem","Checkout","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","isCheckout","setIsCheckout","cartItemRemoveHandler","id","removeItem","cartOneItemAddHandler","item","addOneItem","orderHandler","CheckoutCancelHandler","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const [isCheckout, setIsCheckout] = useState(false);\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n  const cartOneItemAddHandler = (item) => {\r\n    cartCtx.addOneItem(item);\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckout(true);\r\n  };\r\n\r\n  const CheckoutCancelHandler = () => {\r\n    setIsCheckout(false);\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <ul>\r\n          <CartItem\r\n            key={item.id}\r\n            name={item.name}\r\n            amount={item.amount}\r\n            price={item.price}\r\n            onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n            onAdd={cartOneItemAddHandler.bind(null, item)}\r\n          />\r\n        </ul>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout ? <Checkout onCancel={CheckoutCancelHandler} /> : { modalActions }}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}