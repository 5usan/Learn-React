{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food Ordering System with backend connection (firebase)\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, lazy } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {} catch (err) {}\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React/Food Ordering System with backend connection (firebase)/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","lazy","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","err","MealsLoading","mealsList","map","meal","id","name","description","price"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,YAAY;AAC/B,UAAG,CAEF,CAFD,CAEC,OAAMC,GAAN,EAAU,CAEV;AAGA,KARD;;AASAD,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIF,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACS,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACC,EAFX;AAGE,IAAA,IAAI,EAAED,IAAI,CAACE,IAHb;AAIE,IAAA,WAAW,EAAEF,IAAI,CAACG,WAJpB;AAKE,IAAA,KAAK,EAAEH,IAAI,CAACI;AALd,KACOJ,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACG,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1CD;;GAAMR,c;;KAAAA,c;AA4CN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, lazy } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n    try{\r\n\r\n    }catch(err){\r\n      \r\n    }\r\n\r\n      \r\n    };\r\n    fetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}