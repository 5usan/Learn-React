{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food Ordering System with backend connection (firebase)\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, lazy } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AvailableMeals.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      try {\n        const response = await fetch(\"https://food-ordering-system-cf216-default-rtdb.firebaseio.com/\");\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const responseData = await response.json();\n        const loadedMeals = [];\n\n        for (const key in responseData) {\n          loadedMeals.push({\n            key: key,\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (err) {}\n    };\n\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Opmz/k+5zTZAoo/mes+3X6ZqQsM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React/Food Ordering System with backend connection (firebase)/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","lazy","Card","classes","MealItem","AvailableMeals","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","err","MealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,IAA9B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,YAAY;AAC/B,UAAG;AACD,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAIA,YAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,gBAAM,IAAIC,KAAJ,CAAW,sBAAX,CAAN;AACD;;AACD,cAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,cAAMC,WAAW,GAAG,EAApB;;AAEA,aAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,UAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfD,YAAAA,GAAG,EAAEA,GADU;AAEfE,YAAAA,EAAE,EAAEF,GAFW;AAGfG,YAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAHT;AAIfC,YAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAJhB;AAKfC,YAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AALV,WAAjB;AAOD;;AAEDhB,QAAAA,QAAQ,CAACU,WAAD,CAAR;AACAR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAxBD,CAwBC,OAAMe,GAAN,EAAU,CAEV;AAGA,KA9BD;;AA+BAd,IAAAA,UAAU;AACX,GAjCQ,EAiCN,EAjCM,CAAT;;AAmCA,MAAIF,SAAJ,EAAe;AACb,wBACE;AAAS,MAAA,SAAS,EAAEL,OAAO,CAACsB,YAA5B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMC,SAAS,GAAGpB,KAAK,CAACqB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACR,EAFX;AAGE,IAAA,IAAI,EAAEQ,IAAI,CAACP,IAHb;AAIE,IAAA,WAAW,EAAEO,IAAI,CAACN,WAJpB;AAKE,IAAA,KAAK,EAAEM,IAAI,CAACL;AALd,KACOK,IAAI,CAACR,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACG,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKoB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhED;;GAAMrB,c;;KAAAA,c;AAkEN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, lazy } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n    try{\r\n      const response = await fetch(\r\n        \"https://food-ordering-system-cf216-default-rtdb.firebaseio.com/\"\r\n      );\r\n\r\n      if(!response.ok){\r\n        throw new Error (\"Something went wrong\")\r\n      }\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          key: key,\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    }catch(err){\r\n      \r\n    }\r\n\r\n      \r\n    };\r\n    fetchMeals();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section className={classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      key={meal.id}\r\n      id={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}