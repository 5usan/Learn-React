{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Authentication\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expireTime => {\n  const currentTime = new Date().getTime(); //converts in millisecond\n\n  const adjExpireTime = new Date(expireTime).getTime();\n  const remainingDuration = adjExpireTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expireTime) => {\n    setToken(token);\n    const remainingDuration = calculateRemainingTime(expireTime);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expireTime);\n    logoutTimer = setTimeout(logoutHandler, remainingDuration);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["D:/React/Authentication/src/store/auth-context.js"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expireTime","currentTime","Date","getTime","adjExpireTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","AuthContextProvider","props","initialToken","setToken","userIsLoggedIn","logoutHandler","removeItem","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAMA,MAAMC,sBAAsB,GAAIC,UAAD,IAAgB;AAC7C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB,CAD6C,CACH;;AAC1C,QAAMC,aAAa,GAAG,IAAIF,IAAJ,CAASF,UAAT,EAAqBG,OAArB,EAAtB;AAEA,QAAME,iBAAiB,GAAGD,aAAa,GAAGH,WAA1C;AACA,SAAOI,iBAAP;AACD,CAND;;AAQA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;AAEA,QAAME,aAAa,GAAGZ,sBAAsB,CAACW,oBAAD,CAA5C;AACD,CALD;;AAMA,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACd,KAAD,EAAQoB,QAAR,IAAoBxB,QAAQ,CAACuB,YAAD,CAAlC;AACA,QAAME,cAAc,GAAG,CAAC,CAACrB,KAAzB;;AAEA,QAAMsB,aAAa,GAAG,MAAM;AAC1BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAP,IAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;;AAEA,QAAI1B,WAAJ,EAAiB;AACf2B,MAAAA,YAAY,CAAC3B,WAAD,CAAZ;AACD;AACF,GAPD;;AASA,QAAM4B,YAAY,GAAG,CAACzB,KAAD,EAAQK,UAAR,KAAuB;AAC1Ce,IAAAA,QAAQ,CAACpB,KAAD,CAAR;AACA,UAAMU,iBAAiB,GAAGN,sBAAsB,CAACC,UAAD,CAAhD;AACAQ,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8B1B,KAA9B;AACAa,IAAAA,YAAY,CAACa,OAAb,CAAqB,gBAArB,EAAuCrB,UAAvC;AACAR,IAAAA,WAAW,GAAG8B,UAAU,CAACL,aAAD,EAAgBZ,iBAAhB,CAAxB;AACD,GAND;;AAQA,QAAMkB,YAAY,GAAG;AACnB5B,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEoB,cAFO;AAGnBnB,IAAAA,KAAK,EAAEuB,YAHY;AAInBtB,IAAAA,MAAM,EAAEmB;AAJW,GAArB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCM;;GAAMZ,mB;;KAAAA,mB;AAmCb,eAAenB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\nconst calculateRemainingTime = (expireTime) => {\r\n  const currentTime = new Date().getTime(); //converts in millisecond\r\n  const adjExpireTime = new Date(expireTime).getTime();\r\n\r\n  const remainingDuration = adjExpireTime - currentTime;\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n};\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem(\"token\");\r\n  const [token, setToken] = useState(initialToken);\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  };\r\n\r\n  const loginHandler = (token, expireTime) => {\r\n    setToken(token);\r\n    const remainingDuration = calculateRemainingTime(expireTime);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expireTime);\r\n    logoutTimer = setTimeout(logoutHandler, remainingDuration);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}