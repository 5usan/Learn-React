{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Realistic example of custom hook\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sentTaskRequest\n  } = useHttp();\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sentTaskRequest({\n      url: 'https://simple-task-project-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      body: {\n        text: taskText\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      createTask\n    });\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://simple-task-project-default-rtdb.firebaseio.com/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"vRvRYJ1UCZ3af0RjxBy3pCZ/ap8=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["D:/React/Realistic example of custom hook/src/components/NewTask/NewTask.js"],"names":["useState","useHttp","Section","TaskForm","NewTask","props","isLoading","error","sendRequest","sentTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","body","headers","setIsLoading","setError","response","fetch","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDR,OAAO,EAAlE;;AAEA,QAAMS,UAAU,GAAIC,QAAD,IAAc;AAC/B,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD+B,CACI;;AACnC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AACAZ,IAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACD,GAJD;;AAKA,QAAMK,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AAC3CR,IAAAA,eAAe,CAAC;AAACW,MAAAA,GAAG,EAAE,oEAAN;AAA4EC,MAAAA,MAAM,EAAE,MAApF;AAChBC,MAAAA,IAAI,EAAC;AAAEN,QAAAA,IAAI,EAAEC;AAAR,OADW;AAEhBM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFO;AAIbb,MAAAA;AAJa,KAAD,CAAf;AAKAc,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAD0B,EAE1B;AACEN,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAe;AAAEb,UAAAA,IAAI,EAAEC;AAAR,SAAf,CAFR;AAGEM,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACG,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AAEA,YAAMrB,WAAW,GAAGoB,IAAI,CAACnB,IAAzB,CAlBE,CAkB6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEC;AAAzB,OAApB;AAEAZ,MAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACD,KAtBD,CAsBE,OAAOoB,GAAP,EAAY;AACZT,MAAAA,QAAQ,CAACS,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDX,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAlCD;;AAoCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEL,gBAAvB;AAAyC,MAAA,OAAO,EAAEb;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlDD;;GAAMH,O;UACuDH,O;;;KADvDG,O;AAoDN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport useHttp from '../../hooks/use-http';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sentTaskRequest } = useHttp();\n\n  const createTask = (taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n    props.onAddTask(createdTask);\n  }\n  const enterTaskHandler = async (taskText) => {\n    sentTaskRequest({url: 'https://simple-task-project-default-rtdb.firebaseio.com/tasks.json', method: 'POST',\n    body:{ text: taskText },\n    headers: {\n      'Content-Type': 'application/json',\n    }, createTask});\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://simple-task-project-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}