{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Card from \"../UI/Card\";\n// import styles from \"./AddUser.module.css\";\n// import Button from \"./Button\";\n// import ErrorModal from \"../UI/ErrorModal\";\n// const AddUser = (props) => {\n//   const [enteredUsername, setEnteredUsername] = useState(\"\");\n//   const [enteredAge, setEnteredAge] = useState(\"\");\n//   const [error, setError] = useState();\n//   const usernameChangeHandler = (event) => {\n//     setEnteredUsername(event.target.value);\n//   };\n//   const ageChangeHandler = (event) => {\n//     setEnteredAge(event.target.value);\n//   };\n//   const addUserHandler = (event) => {\n//     event.preventDefault();\n//     if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n//       setError({\n//         title: \"Invalid Input\",\n//         message: \"Please enter a valid username or age (non-empty values).\",\n//       });\n//       return;\n//     }\n//     if (+enteredAge < 0) {\n//       //+ changes string to number\n//       setError({\n//         title: \"Invalid Age\",\n//         message: \"Please enter a valid age (age > 0).\",\n//       });\n//       return;\n//     }\n//     props.onAddUser(enteredUsername, enteredAge);\n//     setEnteredUsername(\"\");\n//     setEnteredAge(\"\");\n//   };\n//   const errorHandler = () => {\n//     setError(null);\n//   };\n//   return (\n//     <>\n//       {error && (\n//         <ErrorModal\n//           title={error.title}\n//           message={error.message}\n//           onConfirm={errorHandler}\n//         />\n//       )}\n//       <Card className={styles.input}>\n//         <form onSubmit={addUserHandler}>\n//           <label htmlFor=\"username\">Username</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             onChange={usernameChangeHandler}\n//             value={enteredUsername}\n//           />\n//           <label htmlFor=\"age\">Age</label>\n//           <input\n//             type=\"number\"\n//             id=\"age\"\n//             onChange={ageChangeHandler}\n//             value={enteredAge}\n//           />\n//           <Button type=\"submit\">Add User</Button>\n//         </form>\n//       </Card>\n//     </>\n//   );\n// };\n// export default AddUser;\n//Using Ref to get input elements rather then state\n// import React, { useState, useRef } from \"react\";\n// import Card from \"../UI/Card\";\n// import styles from \"./AddUser.module.css\";\n// import Button from \"./Button\";\n// import ErrorModal from \"../UI/ErrorModal\";\n// const AddUser = (props) => {\n//   const [error, setError] = useState();\n//   const nameInputRef = useRef();\n//   const ageInputRef = useRef();\n//   const addUserHandler = (event) => {\n//     event.preventDefault();\n//     const enteredName = nameInputRef.current.value;\n//     const enteredAge = ageInputRef.current.value;\n//     if (enteredName.trim().length === 0 || enteredAge.trim().length === 0) {\n//       setError({\n//         title: \"Invalid Input\",\n//         message: \"Please enter a valid username or age (non-empty values).\",\n//       });\n//       return;\n//     }\n//     if (+enteredAge < 0) {\n//       //+ changes string to number\n//       setError({\n//         title: \"Invalid Age\",\n//         message: \"Please enter a valid age (age > 0).\",\n//       });\n//       return;\n//     }\n//     props.onAddUser(enteredName, enteredAge);\n//     nameInputRef.current.value = '';\n//     ageInputRef.current.value = '';\n//   };\n//   const errorHandler = () => {\n//     setError(null);\n//   };\n//   return (\n//     <>\n//       {error && (\n//         <ErrorModal\n//           title={error.title}\n//           message={error.message}\n//           onConfirm={errorHandler}\n//         />\n//       )}\n//       <Card className={styles.input}>\n//         <form onSubmit={addUserHandler}>\n//           <label htmlFor=\"username\">Username</label>\n//           <input type=\"text\" id=\"username\" ref={nameInputRef} />\n//           <label htmlFor=\"age\">Age</label>\n//           <input type=\"number\" id=\"age\" ref={ageInputRef} />\n//           <Button type=\"submit\">Add User</Button>\n//         </form>\n//       </Card>\n//     </>\n//   );\n// };\n// export default AddUser;","map":{"version":3,"sources":["D:/React/SimpleForm/src/components/Users/AddUser.js"],"names":[],"mappingssourcesContent":["// import React, { useState } from \"react\";\r\n// import Card from \"../UI/Card\";\r\n// import styles from \"./AddUser.module.css\";\r\n// import Button from \"./Button\";\r\n// import ErrorModal from \"../UI/ErrorModal\";\r\n\r\n// const AddUser = (props) => {\r\n//   const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n//   const [enteredAge, setEnteredAge] = useState(\"\");\r\n//   const [error, setError] = useState();\r\n\r\n//   const usernameChangeHandler = (event) => {\r\n//     setEnteredUsername(event.target.value);\r\n//   };\r\n\r\n//   const ageChangeHandler = (event) => {\r\n//     setEnteredAge(event.target.value);\r\n//   };\r\n\r\n//   const addUserHandler = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n//       setError({\r\n//         title: \"Invalid Input\",\r\n//         message: \"Please enter a valid username or age (non-empty values).\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     if (+enteredAge < 0) {\r\n//       //+ changes string to number\r\n//       setError({\r\n//         title: \"Invalid Age\",\r\n//         message: \"Please enter a valid age (age > 0).\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     props.onAddUser(enteredUsername, enteredAge);\r\n//     setEnteredUsername(\"\");\r\n//     setEnteredAge(\"\");\r\n//   };\r\n\r\n//   const errorHandler = () => {\r\n//     setError(null);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       {error && (\r\n//         <ErrorModal\r\n//           title={error.title}\r\n//           message={error.message}\r\n//           onConfirm={errorHandler}\r\n//         />\r\n//       )}\r\n//       <Card className={styles.input}>\r\n//         <form onSubmit={addUserHandler}>\r\n//           <label htmlFor=\"username\">Username</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"username\"\r\n//             onChange={usernameChangeHandler}\r\n//             value={enteredUsername}\r\n//           />\r\n//           <label htmlFor=\"age\">Age</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"age\"\r\n//             onChange={ageChangeHandler}\r\n//             value={enteredAge}\r\n//           />\r\n//           <Button type=\"submit\">Add User</Button>\r\n//         </form>\r\n//       </Card>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AddUser;\r\n\r\n//Using Ref to get input elements rather then state\r\n\r\n// import React, { useState, useRef } from \"react\";\r\n// import Card from \"../UI/Card\";\r\n// import styles from \"./AddUser.module.css\";\r\n// import Button from \"./Button\";\r\n// import ErrorModal from \"../UI/ErrorModal\";\r\n\r\n// const AddUser = (props) => {\r\n//   const [error, setError] = useState();\r\n\r\n//   const nameInputRef = useRef();\r\n//   const ageInputRef = useRef();\r\n\r\n//   const addUserHandler = (event) => {\r\n//     event.preventDefault();\r\n//     const enteredName = nameInputRef.current.value;\r\n//     const enteredAge = ageInputRef.current.value;\r\n//     if (enteredName.trim().length === 0 || enteredAge.trim().length === 0) {\r\n//       setError({\r\n//         title: \"Invalid Input\",\r\n//         message: \"Please enter a valid username or age (non-empty values).\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     if (+enteredAge < 0) {\r\n//       //+ changes string to number\r\n//       setError({\r\n//         title: \"Invalid Age\",\r\n//         message: \"Please enter a valid age (age > 0).\",\r\n//       });\r\n//       return;\r\n//     }\r\n\r\n//     props.onAddUser(enteredName, enteredAge);\r\n//     nameInputRef.current.value = '';\r\n//     ageInputRef.current.value = '';\r\n\r\n//   };\r\n\r\n//   const errorHandler = () => {\r\n//     setError(null);\r\n//   };\r\n//   return (\r\n//     <>\r\n//       {error && (\r\n//         <ErrorModal\r\n//           title={error.title}\r\n//           message={error.message}\r\n//           onConfirm={errorHandler}\r\n//         />\r\n//       )}\r\n//       <Card className={styles.input}>\r\n//         <form onSubmit={addUserHandler}>\r\n//           <label htmlFor=\"username\">Username</label>\r\n//           <input type=\"text\" id=\"username\" ref={nameInputRef} />\r\n//           <label htmlFor=\"age\">Age</label>\r\n//           <input type=\"number\" id=\"age\" ref={ageInputRef} />\r\n//           <Button type=\"submit\">Add User</Button>\r\n//         </form>\r\n//       </Card>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}