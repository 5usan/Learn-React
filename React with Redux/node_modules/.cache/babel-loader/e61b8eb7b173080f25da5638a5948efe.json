{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\React with Redux\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\"; // import { Component } from \"react\";\n// import { connect } from \"react-redux\";\n\nimport { counterActions } from \"../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter.counter); //Automatically creates the subscription to the redux store and if the component is destroyed or deleted then the subscription is also deleted automatically.\n\n  const isShown = useSelector(state => state.counter.showCounter);\n  const dispatch = useDispatch(); //USING REACTJS/TOOLKIT\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // {type : SOME_UNIQUE_IDENTIFIER, payload: 5} payload is the default key in redux toolkit.\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  }; //USING REACT_REDUX\n  // const incrementHandler = () => {\n  //   dispatch({ type: \"increment\" });\n  // };\n  // const increaseHandler = () => {\n  //   dispatch({ type: \"increase\", value: 5 });\n  // };\n  // const decrementHandler = () => {\n  //   dispatch({ type: \"decrement\" });\n  // };\n  // const toggleCounterHandler = () => {\n  //   dispatch({ type: \"toggle\" });\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isShown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"JZxaiRaBG95DXev/PfqUjtDBHOc=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter; // class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/React/React with Redux/src/components/Counter.js"],"names":["classes","useSelector","useDispatch","counterActions","Counter","counter","state","isShown","showCounter","dispatch","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggle","value"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;AACA;;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcA,OAA1B,CAA3B,CADoB,CAC2C;;AAC/D,QAAME,OAAO,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcG,WAA1B,CAA3B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAHoB,CAKpB;;AACA,QAAMQ,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,QAAQ,CAACN,cAAc,CAACQ,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,QAAQ,CAACN,cAAc,CAACU,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,QAAQ,CAACN,cAAc,CAACY,QAAf,CAAwB,CAAxB,CAAD,CAAR,CAD4B,CACU;AACvC,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM;AACjCP,IAAAA,QAAQ,CAACN,cAAc,CAACc,MAAf,EAAD,CAAR;AACD,GAFD,CAlBoB,CAsBpB;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACK,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,OAAO,iBAAI;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACkB,KAAxB;AAAA,gBAAgCb;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEK,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEI,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnDD;;GAAMZ,O;UACYH,W,EACAA,W,EACCC,W;;;KAHbE,O;AAqDN,eAAeA,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import { Component } from \"react\";\n// import { connect } from \"react-redux\";\nimport { counterActions } from \"../store/index\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter.counter); //Automatically creates the subscription to the redux store and if the component is destroyed or deleted then the subscription is also deleted automatically.\n  const isShown = useSelector((state) => state.counter.showCounter);\n  const dispatch = useDispatch();\n\n  //USING REACTJS/TOOLKIT\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // {type : SOME_UNIQUE_IDENTIFIER, payload: 5} payload is the default key in redux toolkit.\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggle());\n  };\n\n  //USING REACT_REDUX\n  // const incrementHandler = () => {\n  //   dispatch({ type: \"increment\" });\n  // };\n\n  // const increaseHandler = () => {\n  //   dispatch({ type: \"increase\", value: 5 });\n  // };\n\n  // const decrementHandler = () => {\n  //   dispatch({ type: \"decrement\" });\n  // };\n\n  // const toggleCounterHandler = () => {\n  //   dispatch({ type: \"toggle\" });\n  // };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {isShown && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n// class Counter extends Component {\n//   incrementHandler() {\n//     this.props.increment();\n//   }\n//   decrementHandler() {\n//     this.props.decrement();\n//   }\n//   toggleCounterHandler() {}\n//   render() {\n//     return (\n//       <main className={classes.counter}>\n//         <h1>Redux Counter</h1>\n//         <div className={classes.value}>{this.props.counter}</div>\n//         <div>\n//           <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n//           <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n//         </div>\n//         <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n//       </main>\n//     );\n//   }\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     counter: state.counter,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     increment: () => dispatch({ type: \"increment\" }),\n//     decrement: () => dispatch({ type: \"decrement\" }),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}