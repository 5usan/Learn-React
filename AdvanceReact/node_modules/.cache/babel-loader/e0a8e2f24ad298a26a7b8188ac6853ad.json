{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Advance React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const cartIsShown = useSelector(state => state.ui.cartIsShown);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sentCartData = async () => {\n      try {\n        dispatch(uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending Cart Data To The Server!!!\"\n        }));\n        const response = await fetch(\"https://redux-with-backend-default-rtdb.firebaseio.com/cart.json\", {\n          // method: \"POST\", //Add the http request in previous http request\n          method: \"PUT\",\n          //Overwrite the previous http request\n          body: JSON.stringify(cart)\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed.\");\n        }\n\n        dispatch(uiActions.showNotification({\n          status: \"success\",\n          title: \"Send...\",\n          message: \"Send Cart Data To The Server Successfully!!!\"\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"An ERROR Occured!!!\"\n        }));\n      }\n    };\n\n    sentCartData();\n  }, [cart, dispatch, sendData, sendingData]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"snX7zwEGOIQKeseBWlwA6svVIvw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React/Advance React/src/App.js"],"names":["useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","App","cartIsShown","state","ui","cart","dispatch","sentCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","error","sendData","sendingData"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,eAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASF,WAArB,CAA/B;AACA,QAAMG,IAAI,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AAEA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,YAAY,GAAG,YAAY;AAC/B,UAAI;AACFD,QAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAClCC,UAAAA,MAAM,EAAE,SAD0B;AAElCC,UAAAA,KAAK,EAAE,YAF2B;AAGlCC,UAAAA,OAAO,EAAE;AAHyB,SAA3B,CAAD,CAAR;AAKA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAD0B,EAE1B;AACE;AACAC,UAAAA,MAAM,EAAE,KAFV;AAEiB;AACfC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAHR,SAF0B,CAA5B;;AASA,YAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDb,QAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAClCC,UAAAA,MAAM,EAAE,SAD0B;AAElCC,UAAAA,KAAK,EAAE,SAF2B;AAGlCC,UAAAA,OAAO,EAAE;AAHyB,SAA3B,CAAD,CAAR;AAKD,OAxBD,CAwBE,OAAOS,KAAP,EAAc;AACdd,QAAAA,QAAQ,CAACN,SAAS,CAACQ,gBAAV,CAA2B;AAACC,UAAAA,MAAM,EAAE,OAAT;AACpCC,UAAAA,KAAK,EAAE,OAD6B;AAEpCC,UAAAA,OAAO,EAAE;AAF2B,SAA3B,CAAD,CAAR;AAGD;AACF,KA9BD;;AAgCAJ,IAAAA,YAAY;AACb,GAlCQ,EAkCN,CAACF,IAAD,EAAOC,QAAP,EAAiBe,QAAjB,EAA2BC,WAA3B,CAlCM,CAAT;AAmCA,sBACE,QAAC,MAAD;AAAA,eACGpB,WAAW,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/CQD,G;UACaN,W,EACPA,W,EAEIC,W;;;KAJVK,G;AAiDT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/index\";\n\nfunction App() {\n  const cartIsShown = useSelector((state) => state.ui.cartIsShown);\n  const cart = useSelector((state) => state.cart);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sentCartData = async () => {\n      try {\n        dispatch(uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending Cart Data To The Server!!!\",\n        }));\n        const response = await fetch(\n          \"https://redux-with-backend-default-rtdb.firebaseio.com/cart.json\",\n          {\n            // method: \"POST\", //Add the http request in previous http request\n            method: \"PUT\", //Overwrite the previous http request\n            body: JSON.stringify(cart),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed.\");\n        }\n\n        dispatch(uiActions.showNotification({\n          status: \"success\",\n          title: \"Send...\",\n          message: \"Send Cart Data To The Server Successfully!!!\",\n        }));\n      } catch (error) {\n        dispatch(uiActions.showNotification({status: \"error\",\n        title: \"Error\",\n        message: \"An ERROR Occured!!!\",}));\n      }\n    };\n\n    sentCartData();\n  }, [cart, dispatch, sendData, sendingData]);\n  return (\n    <Layout>\n      {cartIsShown && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}