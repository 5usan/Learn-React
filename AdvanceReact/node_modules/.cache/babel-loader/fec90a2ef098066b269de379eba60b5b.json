{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.item;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(newItem);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport default cartSlice;","map":{"version":3,"sources":["D:/React/Advance React/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","replaceCart","state","action","payload","item","addItemToCart","newItem","console","log","existingItem","find","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACC,OAAP,CAAeL,aAArC;AACAG,MAAAA,KAAK,CAACG,IAAN;AACD,KAJO;;AAKRC,IAAAA,aAAa,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMI,OAAO,GAAGJ,MAAM,CAACC,OAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,YAAMG,YAAY,GAAGR,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAkBN,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAV,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAI,CAACW,YAAL,EAAmB;AACjBR,QAAAA,KAAK,CAACJ,KAAN,CAAYe,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJL;AAKflB,UAAAA,IAAI,EAAEW,OAAO,CAACU;AALC,SAAjB;AAOD,OARD,MAQO;AACLP,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACM,UAAb,GAA0BT,OAAO,CAACO,KAA5D;AACD;AACF,KAtBO;;AAuBRI,IAAAA,kBAAkB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMS,EAAE,GAAGT,MAAM,CAACC,OAAlB;AACA,YAAMM,YAAY,GAAGR,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAkBN,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYA,EAAvC,CAArB;AACAV,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIW,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC/Bb,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYqB,MAAZ,CAAoBd,IAAD,IAAUA,IAAI,CAACO,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLF,QAAAA,YAAY,CAACK,QAAb;AACD;AACF;;AAhCO;AANkB,CAAD,CAA7B;AA0CA,eAAepB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.item\r\n    },\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      console.log(newItem);\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default cartSlice;\r\n"]},"metadata":{},"sourceType":"module"}