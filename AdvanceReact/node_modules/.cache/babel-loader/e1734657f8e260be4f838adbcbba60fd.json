{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Advance React\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport sentCartData from \"./store/cart-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartIsShown = useSelector(state => state.ui.cartIsShown);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // const sentCartData = async () => {\n    //   try {\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"pending\",\n    //         title: \"Sending...\",\n    //         message: \"Sending Cart Data To The Server!!!\",\n    //       })\n    //     );\n    //     const response = await fetch(\n    //       \"https://redux-with-backend-default-rtdb.firebaseio.com/cart.json\",\n    //       {\n    //         // method: \"POST\", //Add the http request in previous http request\n    //         method: \"PUT\", //Overwrite the previous http request\n    //         body: JSON.stringify(cart),\n    //       }\n    //     );\n    //     if (!response.ok) {\n    //       throw new Error(\"Sending cart data failed.\");\n    //     }\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"success\",\n    //         title: \"Send...\",\n    //         message: \"Send Cart Data To The Server Successfully!!!\",\n    //       })\n    //     );\n    //   } catch (error) {\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"error\",\n    //         title: \"Error\",\n    //         message: \"An ERROR Occured!!!\",\n    //       })\n    //     );\n    //   }\n    // };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    console.log(\"Hu\");\n    dispatch(sentCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NSecZ7r2PagdS2h10s9RXwLbpGU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React/Advance React/src/App.js"],"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","Notification","sentCartData","isInitial","App","cartIsShown","state","ui","cart","notification","dispatch","console","log","status","title","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,WAAW,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASF,WAArB,CAA/B;AACA,QAAMG,IAAI,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASE,YAArB,CAAhC;AAEA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIQ,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,IAAAA,QAAQ,CAACR,YAAY,CAACM,IAAD,CAAb,CAAR;AACD,GA/CQ,EA+CN,CAACA,IAAD,EAAOE,QAAP,CA/CM,CAAT;AAgDA,sBACE,QAAC,QAAD;AAAA,eACGD,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACI,MADvB;AAEE,MAAA,KAAK,EAAEJ,YAAY,CAACK,KAFtB;AAGE,MAAA,OAAO,EAAEL,YAAY,CAACM;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGV,WAAW,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADlB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtEQD,G;UACaR,W,EACPA,W,EACQA,W,EAEJC,W;;;KALVO,G;AAwET,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport sentCartData from \"./store/cart-slice\";\n\nlet isInitial = true;\n\nfunction App() {\n  const cartIsShown = useSelector((state) => state.ui.cartIsShown);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // const sentCartData = async () => {\n    //   try {\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"pending\",\n    //         title: \"Sending...\",\n    //         message: \"Sending Cart Data To The Server!!!\",\n    //       })\n    //     );\n    //     const response = await fetch(\n    //       \"https://redux-with-backend-default-rtdb.firebaseio.com/cart.json\",\n    //       {\n    //         // method: \"POST\", //Add the http request in previous http request\n    //         method: \"PUT\", //Overwrite the previous http request\n    //         body: JSON.stringify(cart),\n    //       }\n    //     );\n\n    //     if (!response.ok) {\n    //       throw new Error(\"Sending cart data failed.\");\n    //     }\n\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"success\",\n    //         title: \"Send...\",\n    //         message: \"Send Cart Data To The Server Successfully!!!\",\n    //       })\n    //     );\n    //   } catch (error) {\n    //     dispatch(\n    //       uiActions.showNotification({\n    //         status: \"error\",\n    //         title: \"Error\",\n    //         message: \"An ERROR Occured!!!\",\n    //       })\n    //     );\n    //   }\n    // };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    console.log(\"Hu\")\n    dispatch(sentCartData(cart));\n  }, [cart, dispatch]);\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsShown && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}