{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\SPA on realistic project\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Susan\",\n  text: \"Learning React is fun!!\"\n}, {\n  id: \"q2\",\n  author: \"Susan-Shrestha\",\n  text: \"Learning React is great!!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  console.log(match);\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      author: quote.author,\n      text: quote.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["D:/React/SPA on realistic project/src/pages/QuoteDetail.js"],"names":["Fragment","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","NoQuotesFound","DUMMY_QUOTES","id","author","text","QuoteDetail","params","match","console","log","quote","find","quoteId","path"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,gBAApB;AAAsCC,EAAAA,IAAI,EAAE;AAA5C,CAFmB,CAArB;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,KAAK,GAAGV,aAAa,EAA3B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,KAAK,GAAGT,YAAY,CAACU,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACR,EAAN,KAAaI,MAAM,CAACM,OAAjD,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEA,KAAK,CAACP,MAAhC;AAAwC,MAAA,IAAI,EAAEO,KAAK,CAACN;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,KAAK,CAACM,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,WAAUP,MAAM,CAACM,OAAQ,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEL,KAAK,CAACM,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3BD;;GAAMR,W;UACWX,S,EACDG,a;;;KAFVQ,W;AA6BN,eAAeA,WAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Susan\", text: \"Learning React is fun!!\" },\r\n  { id: \"q2\", author: \"Susan-Shrestha\", text: \"Learning React is great!!\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if (!quote) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote author={quote.author} text={quote.text} />\r\n\r\n      {/* <Route path={`/quotes/${params.quoteId}`} exact> */}\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      {/* <Route path=\"/quotes/:quoteId/comments\"> */}\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}